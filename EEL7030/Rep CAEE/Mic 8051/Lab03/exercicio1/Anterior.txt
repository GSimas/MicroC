;Programa mostra1.asm
CS 		EQU P0.7
END0 	EQU P3.3;
END1 	EQU P3.4;
		ORG 0h
		SETB END0
		CLR END1
		SETB CS

VOLTA: 	        MOV A,P2
		CPL A		;complementa o conteudo do acc, inverte os bits
		MOV R0,#8
		MOV R1,#0
DNOVO:	        RLC A       ;rotaciona o conteudo do acc para esquerda através do carry
		JNC NAO     ;desvia se o flag carry estiver em 0
		INC R1       ;incrementa R1
NAO:	        DJNZ R0,DNOVO  ;descrementa o R0 e se R0 != 0, desvia para a instrução endereçada
		MOV A,R1
		
CALL CONVERTE
		MOV P1,A
		JMP VOLTA

CONVERTE: INC A
		  MOVC A,@A+PC 
		  RET
TABELA:   DB 40H, 79H, 24H, 30H, 19H, 12H, 02H, 78H, 00H, 10H, 08H, 03H, 46H, 21H, 06H, 0EH 
		  END 










CS 		  EQU P0.7
END0 	  EQU P3.3;
END1 	  EQU P3.4;
		  ORG 0h
		  CLR END0
		  CLR END1
		  SETB CS
		  MOV P2,#11
		  MOV A,P2   ;P2 são as chaves, switches
		  CPL A      ;complementa P2 para quando apertar as chaves, aparecer 1 e nao 0		  
		  CALL CONVERTE
		  MOV P1,A
		  JMP $
CONVERTE: INC A	
		  MOVC A,@A+PC
		  RET
TABELA:   DB 40H, 79H, 24H, 30H, 19H, 12H, 02H, 78H, 00H, 10H, 08H, 03H, 46H,21H, 06H, 0EH
		  END
