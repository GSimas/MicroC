C51 COMPILER V9.02   EXERCICIO4                                                            06/07/2012 15:25:24 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE EXERCICIO4
OBJECT MODULE PLACED IN exercicio4.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE exercicio4.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg51.h> // Arquivo com os endereços dos registradores do 8051
   2          
   3          unsigned char timerRounds = 0;
   4          void main()
   5          {
   6   1              short i;
   7   1              P0 = 0x00;              //Desabilita 7 seg
   8   1              P1 = 0xFF;
   9   1              P3 = 0xFF;              //Mantem todos os pinos P3 em alto (P3.3 (A0) e P3.4 (A1) estão ligados ao decoder)
  10   1              IE = 0x82;              //Ativa a interrupção do timer 0
  11   1              TMOD = 0x02;    //Timer 0 no modo 2
  12   1              TH0     = 0xFF;         //Valor alto do timer 0 (usado para o reload)
  13   1              TL0 = 0x00;             //Valor baixo do timer 0 (usado para contagem)
  14   1              TR0 = 1;                //Ativa timer 0
  15   1      
  16   1              while(1)
  17   1              {
  18   2                      unsigned char data deslocated;          //Variável utilizada para salvar valor que irá para os LEDs
  19   2                      unsigned char data mask;                        //Variável que será a máscara para manipulação da variável acima (permitindo 
             -ligar apenas um LED por vez)
  20   2                      for(i = 0;i<8;i++)                                      //Rotaciona 8 vezes os LEDs
  21   2                      {
  22   3                              deslocated = 0xFF << i;                 //Desloca i vezes para a esquerda o valor FFh
  23   3                              mask = 0xFF >> (7 - i);                 //Desloca (7-i) vezes para a direita o valor FFh, ficando na mesma posição qu
             -e a variável acima
  24   3                              deslocated = deslocated & mask; //AND em ambas variáveis, fazendo apenas com que a posição 1 fique em n
             -ível alto
  25   3                              while(timerRounds != 0x0020){}  //Aguarda o timerRounds ficar no valor desejado. Para tal está sendo uti
             -lizado o timer 0
  26   3                              P1 = ~deslocated;                               //Joga o valor de deslocated para P1, exibindo nos LEDs
  27   3                              timerRounds = 0x00;                             //Zera o timerRounds para uma nova contagem
  28   3                      }
  29   2              }
  30   1      
  31   1      }
  32          
  33          void isr_timer0 (void) interrupt 1
  34          //Função que é utilizada para tratar a interrupção 1 (endereço 0x0B) que é relativa ao timer 0
  35          {
  36   1              timerRounds++; //Incrementa timerRounds toda vez que é feito TL0 vai de FFh para 00h
  37   1              TL0 = 0x00;
  38   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     92    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
